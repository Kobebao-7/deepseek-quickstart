请为 Python 编写一个名为用户登录模块，用于实现用户登录功能。

用户登陆模块要求：

1. 用户可以使用用户名和密码登录，也可以使用手机号和验证码登录，设计一个ini文件来保存用户名、密码等配置信息
2. 用户名是邮箱地址，字符串类型，若不是字符串应抛出 TypeError 异常，并附带清晰的错误信息。 
3. 使用一个健壮的、能覆盖常见有效邮箱格式（包括带'+'号的别名、多级域名、国际化域名中的非ASCII字符暂不考虑）的正则表达式来判断用户名是否是有效邮箱地址。请在代码中注释该正则表达式的来源或设计思路。
4、密码至少8位，必须包含大写字母、小写字母、数字。使用正则表达式来判断密码是否符合要求，请在代码中注释该正则表达式的来源或设计思路。
5. 登录手机号是中国大陆地区的11位手机号。使用正则表达式来判断手机号是否有效，请在代码中注释该正则表达式的来源或设计思路。
6. 验证码是6位数字验证码，由代码自动生成
7. 登录成功后，在日志中输出"Welcome to back"字符串。失败的话，在日志输出失败原因。
8. 请按照函数功能，来划分 Python 文件，不要都所有函数都写在一个文件里


然后，请使用 Python 的 unittest 模块为用户登录模块编写一个单元测试类 TestSignin。 测试类应包含以下测试方法：

1. test_valid_emails: 测试至少5个不同类型的有效邮箱地址（例如：简单邮箱, 带点的用户名, 带连字符的域名, 带'+'的邮箱, .co.uk等多级域名）。
2. test_valid_mobile: 测试至少5个格式手机号。
3. test_valid_pwd: 测试密码符合要求。
4. test_invalid_input_type: 测试当输入不是字符串时（例如整数、列表、None）是否如期抛出 TypeError。
5. test_empty_string: 测试输入为空字符串时的情况。

可以在上面测试方法的基础上自行添加其他方法，但必须确保测试用例覆盖全面，并且输出完整的、可直接运行的 Python 代码文件内容，包含函数定义和 unittest 测试代码。